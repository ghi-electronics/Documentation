### YamlMime:ManagedReference
items:
- uid: GHIElectronics.Endpoint.UI.Input.Buttons
  commentId: T:GHIElectronics.Endpoint.UI.Input.Buttons
  id: Buttons
  parent: GHIElectronics.Endpoint.UI.Input
  children:
  - GHIElectronics.Endpoint.UI.Input.Buttons.ButtonDownEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.ButtonUpEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.Focus(GHIElectronics.Endpoint.UI.UIElement)
  - GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
  - GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  - GHIElectronics.Endpoint.UI.Input.Buttons.GotFocusEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  - GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  - GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  - GHIElectronics.Endpoint.UI.Input.Buttons.LostFocusEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonDownEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonUpEvent
  - GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
  langs:
  - csharp
  - vb
  name: Buttons
  nameWithType: Buttons
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons
  type: Class
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Buttons
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 21
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: >-
    The Button class represents the button device to the

    members of a context.
  remarks: >-
    The static members of this class simply delegate to the primary

    button device of the calling thread's input manager.
  example: []
  syntax:
    content: public sealed class Buttons
    content.vb: Public NotInheritable Class Buttons
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonDownEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonDownEvent
  id: PreviewButtonDownEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: PreviewButtonDownEvent
  nameWithType: Buttons.PreviewButtonDownEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonDownEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: PreviewButtonDownEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 25
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: PreviewButtonDown
  example: []
  syntax:
    content: public static readonly RoutedEvent PreviewButtonDownEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly PreviewButtonDownEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonUpEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonUpEvent
  id: PreviewButtonUpEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: PreviewButtonUpEvent
  nameWithType: Buttons.PreviewButtonUpEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.PreviewButtonUpEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: PreviewButtonUpEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 30
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: PreviewButtonUp
  example: []
  syntax:
    content: public static readonly RoutedEvent PreviewButtonUpEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly PreviewButtonUpEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.ButtonDownEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.ButtonDownEvent
  id: ButtonDownEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: ButtonDownEvent
  nameWithType: Buttons.ButtonDownEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.ButtonDownEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: ButtonDownEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 35
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: ButtonDown
  example: []
  syntax:
    content: public static readonly RoutedEvent ButtonDownEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly ButtonDownEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.ButtonUpEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.ButtonUpEvent
  id: ButtonUpEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: ButtonUpEvent
  nameWithType: Buttons.ButtonUpEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.ButtonUpEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: ButtonUpEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 40
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: ButtonUp
  example: []
  syntax:
    content: public static readonly RoutedEvent ButtonUpEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly ButtonUpEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.GotFocusEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.GotFocusEvent
  id: GotFocusEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: GotFocusEvent
  nameWithType: Buttons.GotFocusEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.GotFocusEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: GotFocusEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 45
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: GotFocus
  example: []
  syntax:
    content: public static readonly RoutedEvent GotFocusEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly GotFocusEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.LostFocusEvent
  commentId: F:GHIElectronics.Endpoint.UI.Input.Buttons.LostFocusEvent
  id: LostFocusEvent
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: LostFocusEvent
  nameWithType: Buttons.LostFocusEvent
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.LostFocusEvent
  type: Field
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: LostFocusEvent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 50
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: LostFocus
  example: []
  syntax:
    content: public static readonly RoutedEvent LostFocusEvent
    return:
      type: GHIElectronics.Endpoint.UI.RoutedEvent
    content.vb: Public Shared ReadOnly LostFocusEvent As RoutedEvent
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
  commentId: P:GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
  id: FocusedElement
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: FocusedElement
  nameWithType: Buttons.FocusedElement
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
  type: Property
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: FocusedElement
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 55
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Returns the element that the button is focused on.
  example: []
  syntax:
    content: public static UIElement FocusedElement { get; }
    parameters: []
    return:
      type: GHIElectronics.Endpoint.UI.UIElement
    content.vb: Public Shared ReadOnly Property FocusedElement As UIElement
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.Focus(GHIElectronics.Endpoint.UI.UIElement)
  commentId: M:GHIElectronics.Endpoint.UI.Input.Buttons.Focus(GHIElectronics.Endpoint.UI.UIElement)
  id: Focus(GHIElectronics.Endpoint.UI.UIElement)
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: Focus(UIElement)
  nameWithType: Buttons.Focus(UIElement)
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.Focus(GHIElectronics.Endpoint.UI.UIElement)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Focus
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 63
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Focuses the button on a particular element.
  example: []
  syntax:
    content: public static UIElement Focus(UIElement element)
    parameters:
    - id: element
      type: GHIElectronics.Endpoint.UI.UIElement
      description: The element to focus the button on.
    return:
      type: GHIElectronics.Endpoint.UI.UIElement
    content.vb: Public Shared Function Focus(element As UIElement) As UIElement
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.Focus*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  commentId: M:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  id: IsButtonDown(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: IsButtonDown(HardwareButton)
  nameWithType: Buttons.IsButtonDown(HardwareButton)
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: IsButtonDown
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 68
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Returns whether or not the specified button is down.
  example: []
  syntax:
    content: public static bool IsButtonDown(HardwareButton button)
    parameters:
    - id: button
      type: GHIElectronics.Endpoint.UI.Input.HardwareButton
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsButtonDown(button As HardwareButton) As Boolean
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  commentId: M:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  id: IsButtonUp(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: IsButtonUp(HardwareButton)
  nameWithType: Buttons.IsButtonUp(HardwareButton)
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: IsButtonUp
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 73
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Returns whether or not the specified button is up.
  example: []
  syntax:
    content: public static bool IsButtonUp(HardwareButton button)
    parameters:
    - id: button
      type: GHIElectronics.Endpoint.UI.Input.HardwareButton
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsButtonUp(button As HardwareButton) As Boolean
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  commentId: M:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  id: IsButtonHeld(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: IsButtonHeld(HardwareButton)
  nameWithType: Buttons.IsButtonHeld(HardwareButton)
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: IsButtonHeld
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 78
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Returns whether or not the specified button is held.
  example: []
  syntax:
    content: public static bool IsButtonHeld(HardwareButton button)
    parameters:
    - id: button
      type: GHIElectronics.Endpoint.UI.Input.HardwareButton
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsButtonHeld(button As HardwareButton) As Boolean
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  commentId: M:GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  id: GetButtonState(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: GetButtonState(HardwareButton)
  nameWithType: Buttons.GetButtonState(HardwareButton)
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState(GHIElectronics.Endpoint.UI.Input.HardwareButton)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: GetButtonState
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 83
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: Returns the state of the specified button.
  example: []
  syntax:
    content: public static ButtonState GetButtonState(HardwareButton button)
    parameters:
    - id: button
      type: GHIElectronics.Endpoint.UI.Input.HardwareButton
    return:
      type: GHIElectronics.Endpoint.UI.Input.ButtonState
    content.vb: Public Shared Function GetButtonState(button As HardwareButton) As ButtonState
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState*
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
  commentId: P:GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
  id: PrimaryDevice
  parent: GHIElectronics.Endpoint.UI.Input.Buttons
  langs:
  - csharp
  - vb
  name: PrimaryDevice
  nameWithType: Buttons.PrimaryDevice
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
  type: Property
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: PrimaryDevice
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.UI/Input/Buttons.cs
    startLine: 88
  assemblies:
  - GHIElectronics.Endpoint.UI
  namespace: GHIElectronics.Endpoint.UI.Input
  summary: The primary button device.
  example: []
  syntax:
    content: public static ButtonDevice PrimaryDevice { get; }
    parameters: []
    return:
      type: GHIElectronics.Endpoint.UI.Input.ButtonDevice
    content.vb: Public Shared ReadOnly Property PrimaryDevice As ButtonDevice
  overload: GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice*
references:
- uid: GHIElectronics.Endpoint.UI.Input
  commentId: N:GHIElectronics.Endpoint.UI.Input
  href: GHIElectronics.html
  name: GHIElectronics.Endpoint.UI.Input
  nameWithType: GHIElectronics.Endpoint.UI.Input
  fullName: GHIElectronics.Endpoint.UI.Input
  spec.csharp:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI
    name: UI
    href: GHIElectronics.Endpoint.UI.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI.Input
    name: Input
    href: GHIElectronics.Endpoint.UI.Input.html
  spec.vb:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI
    name: UI
    href: GHIElectronics.Endpoint.UI.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI.Input
    name: Input
    href: GHIElectronics.Endpoint.UI.Input.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GHIElectronics.Endpoint.UI.RoutedEvent
  commentId: T:GHIElectronics.Endpoint.UI.RoutedEvent
  parent: GHIElectronics.Endpoint.UI
  href: GHIElectronics.Endpoint.UI.RoutedEvent.html
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: GHIElectronics.Endpoint.UI.RoutedEvent
- uid: GHIElectronics.Endpoint.UI
  commentId: N:GHIElectronics.Endpoint.UI
  href: GHIElectronics.html
  name: GHIElectronics.Endpoint.UI
  nameWithType: GHIElectronics.Endpoint.UI
  fullName: GHIElectronics.Endpoint.UI
  spec.csharp:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI
    name: UI
    href: GHIElectronics.Endpoint.UI.html
  spec.vb:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.UI
    name: UI
    href: GHIElectronics.Endpoint.UI.html
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_FocusedElement
  name: FocusedElement
  nameWithType: Buttons.FocusedElement
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.FocusedElement
- uid: GHIElectronics.Endpoint.UI.UIElement
  commentId: T:GHIElectronics.Endpoint.UI.UIElement
  parent: GHIElectronics.Endpoint.UI
  href: GHIElectronics.Endpoint.UI.UIElement.html
  name: UIElement
  nameWithType: UIElement
  fullName: GHIElectronics.Endpoint.UI.UIElement
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.Focus*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.Focus
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_Focus_GHIElectronics_Endpoint_UI_UIElement_
  name: Focus
  nameWithType: Buttons.Focus
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.Focus
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_IsButtonDown_GHIElectronics_Endpoint_UI_Input_HardwareButton_
  name: IsButtonDown
  nameWithType: Buttons.IsButtonDown
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonDown
- uid: GHIElectronics.Endpoint.UI.Input.HardwareButton
  commentId: T:GHIElectronics.Endpoint.UI.Input.HardwareButton
  parent: GHIElectronics.Endpoint.UI.Input
  href: GHIElectronics.Endpoint.UI.Input.HardwareButton.html
  name: HardwareButton
  nameWithType: HardwareButton
  fullName: GHIElectronics.Endpoint.UI.Input.HardwareButton
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_IsButtonUp_GHIElectronics_Endpoint_UI_Input_HardwareButton_
  name: IsButtonUp
  nameWithType: Buttons.IsButtonUp
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonUp
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_IsButtonHeld_GHIElectronics_Endpoint_UI_Input_HardwareButton_
  name: IsButtonHeld
  nameWithType: Buttons.IsButtonHeld
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.IsButtonHeld
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_GetButtonState_GHIElectronics_Endpoint_UI_Input_HardwareButton_
  name: GetButtonState
  nameWithType: Buttons.GetButtonState
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.GetButtonState
- uid: GHIElectronics.Endpoint.UI.Input.ButtonState
  commentId: T:GHIElectronics.Endpoint.UI.Input.ButtonState
  parent: GHIElectronics.Endpoint.UI.Input
  href: GHIElectronics.Endpoint.UI.Input.ButtonState.html
  name: ButtonState
  nameWithType: ButtonState
  fullName: GHIElectronics.Endpoint.UI.Input.ButtonState
- uid: GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice*
  commentId: Overload:GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
  href: GHIElectronics.Endpoint.UI.Input.Buttons.html#GHIElectronics_Endpoint_UI_Input_Buttons_PrimaryDevice
  name: PrimaryDevice
  nameWithType: Buttons.PrimaryDevice
  fullName: GHIElectronics.Endpoint.UI.Input.Buttons.PrimaryDevice
- uid: GHIElectronics.Endpoint.UI.Input.ButtonDevice
  commentId: T:GHIElectronics.Endpoint.UI.Input.ButtonDevice
  parent: GHIElectronics.Endpoint.UI.Input
  href: GHIElectronics.Endpoint.UI.Input.ButtonDevice.html
  name: ButtonDevice
  nameWithType: ButtonDevice
  fullName: GHIElectronics.Endpoint.UI.Input.ButtonDevice
