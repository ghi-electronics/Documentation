### YamlMime:ManagedReference
items:
- uid: GHIElectronics.Endpoint.Drawing.Font
  commentId: T:GHIElectronics.Endpoint.Drawing.Font
  id: Font
  parent: GHIElectronics.Endpoint.Drawing
  children:
  - GHIElectronics.Endpoint.Drawing.Font.#ctor
  - GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[])
  - GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[],System.Int32,System.Int32)
  - GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Int32)
  - GHIElectronics.Endpoint.Drawing.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)
  - GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)
  - GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)
  - GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth(System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.String@,System.Int32@)
  - GHIElectronics.Endpoint.Drawing.Font.Dispose
  - GHIElectronics.Endpoint.Drawing.Font.Finalize
  - GHIElectronics.Endpoint.Drawing.Font.Height
  - GHIElectronics.Endpoint.Drawing.Font.SkFont
  - GHIElectronics.Endpoint.Drawing.Font.Unit
  langs:
  - csharp
  - vb
  name: Font
  nameWithType: Font
  fullName: GHIElectronics.Endpoint.Drawing.Font
  type: Class
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Font
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 21
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: 'public sealed class Font : MarshalByRefObject, IDisposable'
    content.vb: Public NotInheritable Class Font Inherits MarshalByRefObject Implements IDisposable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: GHIElectronics.Endpoint.Drawing.Font.SkFont
  commentId: P:GHIElectronics.Endpoint.Drawing.Font.SkFont
  id: SkFont
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: SkFont
  nameWithType: Font.SkFont
  fullName: GHIElectronics.Endpoint.Drawing.Font.SkFont
  type: Property
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: SkFont
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 33
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public SKFont SkFont { get; }
    parameters: []
    return:
      type: SkiaSharp.SKFont
    content.vb: Public ReadOnly Property SkFont As SKFont
  overload: GHIElectronics.Endpoint.Drawing.Font.SkFont*
- uid: GHIElectronics.Endpoint.Drawing.Font.#ctor
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.#ctor
  id: '#ctor'
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Font()
  nameWithType: Font.Font()
  fullName: GHIElectronics.Endpoint.Drawing.Font.Font()
  type: Constructor
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: .ctor
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 37
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public Font()
    content.vb: Public Sub New()
  overload: GHIElectronics.Endpoint.Drawing.Font.#ctor*
  nameWithType.vb: Font.New()
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.New()
  name.vb: New()
- uid: GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Int32)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Font(int)
  nameWithType: Font.Font(int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.Font(int)
  type: Constructor
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: .ctor
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 41
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public Font(int size)
    parameters:
    - id: size
      type: System.Int32
    content.vb: Public Sub New(size As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.#ctor*
  nameWithType.vb: Font.New(Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.New(Integer)
  name.vb: New(Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[])
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Font(byte[])
  nameWithType: Font.Font(byte[])
  fullName: GHIElectronics.Endpoint.Drawing.Font.Font(byte[])
  type: Constructor
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: .ctor
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 55
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public Font(byte[] data)
    parameters:
    - id: data
      type: System.Byte[]
    content.vb: Public Sub New(data As Byte())
  overload: GHIElectronics.Endpoint.Drawing.Font.#ctor*
  nameWithType.vb: Font.New(Byte())
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.New(Byte())
  name.vb: New(Byte())
- uid: GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[],System.Int32,System.Int32)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.#ctor(System.Byte[],System.Int32,System.Int32)
  id: '#ctor(System.Byte[],System.Int32,System.Int32)'
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Font(byte[], int, int)
  nameWithType: Font.Font(byte[], int, int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.Font(byte[], int, int)
  type: Constructor
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: .ctor
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 57
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public Font(byte[] data, int offset, int count)
    parameters:
    - id: data
      type: System.Byte[]
    - id: offset
      type: System.Int32
    - id: count
      type: System.Int32
    content.vb: Public Sub New(data As Byte(), offset As Integer, count As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.#ctor*
  nameWithType.vb: Font.New(Byte(), Integer, Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.New(Byte(), Integer, Integer)
  name.vb: New(Byte(), Integer, Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.Finalize
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.Finalize
  id: Finalize
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: ~Font()
  nameWithType: Font.~Font()
  fullName: GHIElectronics.Endpoint.Drawing.Font.~Font()
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Finalize
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 87
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: protected ~Font()
    content.vb: 'Protected '
  overload: GHIElectronics.Endpoint.Drawing.Font.Finalize*
  nameWithType.vb: ''
  fullName.vb: ''
  name.vb: ''
- uid: GHIElectronics.Endpoint.Drawing.Font.Unit
  commentId: P:GHIElectronics.Endpoint.Drawing.Font.Unit
  id: Unit
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Unit
  nameWithType: Font.Unit
  fullName: GHIElectronics.Endpoint.Drawing.Font.Unit
  type: Property
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Unit
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 97
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public GraphicsUnit Unit { get; }
    parameters: []
    return:
      type: GHIElectronics.Endpoint.Drawing.GraphicsUnit
    content.vb: Public ReadOnly Property Unit As GraphicsUnit
  overload: GHIElectronics.Endpoint.Drawing.Font.Unit*
- uid: GHIElectronics.Endpoint.Drawing.Font.Height
  commentId: P:GHIElectronics.Endpoint.Drawing.Font.Height
  id: Height
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: Font.Height
  fullName: GHIElectronics.Endpoint.Drawing.Font.Height
  type: Property
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Height
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 99
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public int Height { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Height As Integer
  overload: GHIElectronics.Endpoint.Drawing.Font.Height*
- uid: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth(System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.String@,System.Int32@)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth(System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.String@,System.Int32@)
  id: CountCharactersInWidth(System.String,System.Int32,System.Int32,System.Int32@,System.Boolean,System.String@,System.Int32@)
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: CountCharactersInWidth(string, int, int, ref int, bool, ref string, ref int)
  nameWithType: Font.CountCharactersInWidth(string, int, int, ref int, bool, ref string, ref int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth(string, int, int, ref int, bool, ref string, ref int)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: CountCharactersInWidth
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 183
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public void CountCharactersInWidth(string text, int maxChars, int width, ref int totWidth, bool fWordWrap, ref string strNext, ref int numChars)
    parameters:
    - id: text
      type: System.String
    - id: maxChars
      type: System.Int32
    - id: width
      type: System.Int32
    - id: totWidth
      type: System.Int32
    - id: fWordWrap
      type: System.Boolean
    - id: strNext
      type: System.String
    - id: numChars
      type: System.Int32
    content.vb: Public Sub CountCharactersInWidth(text As String, maxChars As Integer, width As Integer, totWidth As Integer, fWordWrap As Boolean, strNext As String, numChars As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth*
  nameWithType.vb: Font.CountCharactersInWidth(String, Integer, Integer, Integer, Boolean, String, Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth(String, Integer, Integer, Integer, Boolean, String, Integer)
  name.vb: CountCharactersInWidth(String, Integer, Integer, Integer, Boolean, String, Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.ComputeExtent(System.String,System.Int32@,System.Int32@)
  id: ComputeExtent(System.String,System.Int32@,System.Int32@)
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: ComputeExtent(string, out int, out int)
  nameWithType: Font.ComputeExtent(string, out int, out int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent(string, out int, out int)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: ComputeExtent
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 294
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public void ComputeExtent(string text, out int width, out int height)
    parameters:
    - id: text
      type: System.String
    - id: width
      type: System.Int32
    - id: height
      type: System.Int32
    content.vb: Public Sub ComputeExtent(text As String, width As Integer, height As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent*
  nameWithType.vb: Font.ComputeExtent(String, Integer, Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent(String, Integer, Integer)
  name.vb: ComputeExtent(String, Integer, Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@)
  id: ComputeTextInRect(System.String,System.Int32@,System.Int32@)
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: ComputeTextInRect(string, out int, out int)
  nameWithType: Font.ComputeTextInRect(string, out int, out int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(string, out int, out int)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: ComputeTextInRect
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 295
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public void ComputeTextInRect(string text, out int renderWidth, out int renderHeight)
    parameters:
    - id: text
      type: System.String
    - id: renderWidth
      type: System.Int32
    - id: renderHeight
      type: System.Int32
    content.vb: Public Sub ComputeTextInRect(text As String, renderWidth As Integer, renderHeight As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect*
  nameWithType.vb: Font.ComputeTextInRect(String, Integer, Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(String, Integer, Integer)
  name.vb: ComputeTextInRect(String, Integer, Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)
  id: ComputeTextInRect(System.String,System.Int32@,System.Int32@,System.Int32)
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: ComputeTextInRect(string, out int, out int, int)
  nameWithType: Font.ComputeTextInRect(string, out int, out int, int)
  fullName: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(string, out int, out int, int)
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: ComputeTextInRect
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 296
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  syntax:
    content: public void ComputeTextInRect(string text, out int renderWidth, out int renderHeight, int availableWidth)
    parameters:
    - id: text
      type: System.String
    - id: renderWidth
      type: System.Int32
    - id: renderHeight
      type: System.Int32
    - id: availableWidth
      type: System.Int32
    content.vb: Public Sub ComputeTextInRect(text As String, renderWidth As Integer, renderHeight As Integer, availableWidth As Integer)
  overload: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect*
  nameWithType.vb: Font.ComputeTextInRect(String, Integer, Integer, Integer)
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect(String, Integer, Integer, Integer)
  name.vb: ComputeTextInRect(String, Integer, Integer, Integer)
- uid: GHIElectronics.Endpoint.Drawing.Font.Dispose
  commentId: M:GHIElectronics.Endpoint.Drawing.Font.Dispose
  id: Dispose
  parent: GHIElectronics.Endpoint.Drawing.Font
  langs:
  - csharp
  - vb
  name: Dispose()
  nameWithType: Font.Dispose()
  fullName: GHIElectronics.Endpoint.Drawing.Font.Dispose()
  type: Method
  source:
    remote:
      path: Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
      branch: main
      repo: https://github.com/ghi-electronics/Endpoint-Libraries.git
    id: Dispose
    path: ../Endpoint-Libraries/Dotnet/GHIElectronics.Endpoint.Libraries/GHIElectronics.Endpoint.Drawing/Font.cs
    startLine: 305
  assemblies:
  - GHIElectronics.Endpoint.Drawing
  namespace: GHIElectronics.Endpoint.Drawing
  summary: Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
  example: []
  syntax:
    content: public void Dispose()
    content.vb: Public Sub Dispose()
  overload: GHIElectronics.Endpoint.Drawing.Font.Dispose*
  implements:
  - System.IDisposable.Dispose
references:
- uid: GHIElectronics.Endpoint.Drawing
  commentId: N:GHIElectronics.Endpoint.Drawing
  href: GHIElectronics.html
  name: GHIElectronics.Endpoint.Drawing
  nameWithType: GHIElectronics.Endpoint.Drawing
  fullName: GHIElectronics.Endpoint.Drawing
  spec.csharp:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.Drawing
    name: Drawing
    href: GHIElectronics.Endpoint.Drawing.html
  spec.vb:
  - uid: GHIElectronics
    name: GHIElectronics
    href: GHIElectronics.html
  - name: .
  - uid: GHIElectronics.Endpoint
    name: Endpoint
    href: GHIElectronics.Endpoint.html
  - name: .
  - uid: GHIElectronics.Endpoint.Drawing
    name: Drawing
    href: GHIElectronics.Endpoint.Drawing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: GHIElectronics.Endpoint.Drawing.Font.SkFont*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.SkFont
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_SkFont
  name: SkFont
  nameWithType: Font.SkFont
  fullName: GHIElectronics.Endpoint.Drawing.Font.SkFont
- uid: SkiaSharp.SKFont
  commentId: T:SkiaSharp.SKFont
  parent: SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp.skfont
  name: SKFont
  nameWithType: SKFont
  fullName: SkiaSharp.SKFont
- uid: SkiaSharp
  commentId: N:SkiaSharp
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/skiasharp
  name: SkiaSharp
  nameWithType: SkiaSharp
  fullName: SkiaSharp
- uid: GHIElectronics.Endpoint.Drawing.Font.#ctor*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.#ctor
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font__ctor
  name: Font
  nameWithType: Font.Font
  fullName: GHIElectronics.Endpoint.Drawing.Font.Font
  nameWithType.vb: Font.New
  fullName.vb: GHIElectronics.Endpoint.Drawing.Font.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: GHIElectronics.Endpoint.Drawing.Font.Finalize*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.Finalize
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_Finalize
  name: ~Font
  nameWithType: Font.~Font
  fullName: GHIElectronics.Endpoint.Drawing.Font.~Font
  spec.csharp:
  - name: "~"
  - uid: GHIElectronics.Endpoint.Drawing.Font.Finalize*
    name: Font
    href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_Finalize
- uid: GHIElectronics.Endpoint.Drawing.Font.Unit*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.Unit
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_Unit
  name: Unit
  nameWithType: Font.Unit
  fullName: GHIElectronics.Endpoint.Drawing.Font.Unit
- uid: GHIElectronics.Endpoint.Drawing.GraphicsUnit
  commentId: T:GHIElectronics.Endpoint.Drawing.GraphicsUnit
  parent: GHIElectronics.Endpoint.Drawing
  href: GHIElectronics.Endpoint.Drawing.GraphicsUnit.html
  name: GraphicsUnit
  nameWithType: GraphicsUnit
  fullName: GHIElectronics.Endpoint.Drawing.GraphicsUnit
- uid: GHIElectronics.Endpoint.Drawing.Font.Height*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.Height
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_Height
  name: Height
  nameWithType: Font.Height
  fullName: GHIElectronics.Endpoint.Drawing.Font.Height
- uid: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_CountCharactersInWidth_System_String_System_Int32_System_Int32_System_Int32__System_Boolean_System_String__System_Int32__
  name: CountCharactersInWidth
  nameWithType: Font.CountCharactersInWidth
  fullName: GHIElectronics.Endpoint.Drawing.Font.CountCharactersInWidth
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.ComputeExtent
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_ComputeExtent_System_String_System_Int32__System_Int32__
  name: ComputeExtent
  nameWithType: Font.ComputeExtent
  fullName: GHIElectronics.Endpoint.Drawing.Font.ComputeExtent
- uid: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_ComputeTextInRect_System_String_System_Int32__System_Int32__
  name: ComputeTextInRect
  nameWithType: Font.ComputeTextInRect
  fullName: GHIElectronics.Endpoint.Drawing.Font.ComputeTextInRect
- uid: GHIElectronics.Endpoint.Drawing.Font.Dispose*
  commentId: Overload:GHIElectronics.Endpoint.Drawing.Font.Dispose
  href: GHIElectronics.Endpoint.Drawing.Font.html#GHIElectronics_Endpoint_Drawing_Font_Dispose
  name: Dispose
  nameWithType: Font.Dispose
  fullName: GHIElectronics.Endpoint.Drawing.Font.Dispose
- uid: System.IDisposable.Dispose
  commentId: M:System.IDisposable.Dispose
  parent: System.IDisposable
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  name: Dispose()
  nameWithType: IDisposable.Dispose()
  fullName: System.IDisposable.Dispose()
  spec.csharp:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IDisposable.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.idisposable.dispose
  - name: (
  - name: )
